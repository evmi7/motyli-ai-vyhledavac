# -*- coding: utf-8 -*-
"""clip_image_to_image_gradio_zip_tempfile.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/17FxMphUU1roDw1uTiMGZy02NxY-rB0v_

# ü¶ã Vyhled√°v√°n√≠ podobn√Ωch mot√Ωl≈Ø podle obr√°zku (ZIP oprava pomoc√≠ tempfile)
Verze, kter√° vrac√≠ platn√Ω ZIP soubor p≈ôes `gr.File`, a nevyhazuje chyby.
"""

# üìÅ P≈ôipojen√≠ Google Drive
from google.colab import drive
drive.mount('/content/drive')

# üì¶ Instalace knihoven
!pip install gradio
!pip install ftfy regex tqdm
!pip install git+https://github.com/openai/CLIP.git

import gradio as gr
import clip
import torch
from PIL import Image
from pathlib import Path
import io
import zipfile
import tempfile

device = 'cuda' if torch.cuda.is_available() else 'cpu'
model, preprocess = clip.load("ViT-B/32", device=device)

embedding_path = "/content/drive/MyDrive/custom_vision/clip_image_embeddings.pt"
data = torch.load(embedding_path, map_location=device)
image_embeddings = data["embeddings"]
image_paths = [Path(p) for p in data["paths"]]

def find_similar_and_zip(uploaded_img):
    image = preprocess(uploaded_img).unsqueeze(0).to(device)
    with torch.no_grad():
        image_embedding = model.encode_image(image)

    similarities = (image_embeddings @ image_embedding.T).squeeze(1)
    values, indices = similarities.topk(6)

    result_paths = []
    result_images = []

    for i in indices.cpu().tolist():
        try:
            path = image_paths[i]
            result_paths.append(path)
            result_images.append(Image.open(path))
        except Exception as e:
            print(f"‚ö†Ô∏è Chyba p≈ôi naƒç√≠t√°n√≠ obr√°zku {path}: {e}")

    # Ulo≈æen√≠ ZIP do doƒçasn√©ho souboru
    with tempfile.NamedTemporaryFile(delete=False, suffix=".zip") as tmp:
        with zipfile.ZipFile(tmp, "w") as zipf:
            for path in result_paths:
                if path.exists():
                    zipf.write(path, arcname=path.name)
        zip_path = tmp.name

    return result_images, zip_path

demo = gr.Interface(
    fn=find_similar_and_zip,
    inputs=gr.Image(type="pil", label="Nahraj obr√°zek mot√Ωla"),
    outputs=[
        gr.Gallery(label="Podobn√© obr√°zky"),
        gr.File(label="üì¶ St√°hnout ZIP s obr√°zky")
    ],
    title="ü¶ã Vyhled√°v√°n√≠ podobn√Ωch mot√Ωl≈Ø",
    flagging_mode="never"
)

demo.launch(share=True, debug=True)